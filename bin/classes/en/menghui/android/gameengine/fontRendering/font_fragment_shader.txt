varying vec2 pass_textureCoords;

uniform vec3 colour;
uniform sampler2D fontAtlas;

// Changed these variables from const to uniform so that these variables can be set outside the shader.
uniform float width;
uniform float edge;
uniform float borderWidth;
uniform float borderEdge;
uniform vec2 offset;
uniform vec3 outlineColour;

void main(void) {
    // Calculate the alpha value of this fragment to set so that the font appeared smooth on the screen. 
    float distance = 1.0 - texture2D(fontAtlas, pass_textureCoords).a;
    float alpha = 1.0 - smoothstep(width, width + edge, distance);
    
    // Calculate the alpha value of this fragment to add a border to the font on the screen.
    float distance2 = 1.0 - texture2D(fontAtlas, pass_textureCoords + offset).a;
    float outlineAlpha = 1.0 - smoothstep(borderWidth, borderWidth + borderEdge, distance2);
    
    float overallAlpha = alpha + (1.0 - alpha) * outlineAlpha;
    vec3 overallColour = mix(outlineColour, colour, alpha / overallAlpha); // mix the colours based on the alpha ratio.
    
    gl_FragColor = vec4(overallColour, overallAlpha);
}